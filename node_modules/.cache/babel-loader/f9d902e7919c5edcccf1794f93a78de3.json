{"ast":null,"code":"var _jsxFileName = \"/home/dsrivastava/Desktop/local/ReactProject/event_finder_app/src/LoginComponent.js\";\nimport React from 'react';\nimport reactDom from 'react-dom';\nimport { store, login, logout } from './sessionStore';\nimport DashboardComponent from './DashboardComponent';\nimport InvalidCredentialsComponent from './InvalidCredentialsComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: '',\n      status: '',\n      users: [{\n        'uname': 'admin',\n        'pwd': 'admin'\n      }, {\n        'uname': 'dristy',\n        'pwd': 'dristy'\n      }, {\n        'uname': 'user',\n        'pwd': 'password'\n      }, {\n        'uname': 'test',\n        'pwd': 'user'\n      }]\n    };\n    this.uname = /*#__PURE__*/React.createRef();\n    this.pwd = /*#__PURE__*/React.createRef();\n  }\n\n  authenticateUser() {\n    var uname = this.uname.current.value;\n    var pwd = this.pwd.current.value;\n\n    if (this.state.users.find(x => x.uname === uname && x.pwd === pwd)) {\n      store.dispatch(login(uname));\n      this.setState({\n        msg: 'Credentials Validated.....',\n        status: 'valid',\n        className: 'successClass'\n      });\n      reactDom.render( /*#__PURE__*/_jsxDEV(DashboardComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }, this), document.getElementById(\"root\"));\n    } else {\n      store.dispatch(logout());\n      this.setState({\n        msg: 'Invalid Credentials.....',\n        status: 'invalid',\n        className: 'failureClass'\n      });\n      reactDom.render( /*#__PURE__*/_jsxDEV(InvalidCredentialsComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this), document.getElementById(\"root\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.state.className,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"User Name\",\n        ref: this.uname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 93\n      }, this), \"Password :  \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        ref: this.pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.authenticateUser(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/dsrivastava/Desktop/local/ReactProject/event_finder_app/src/LoginComponent.js"],"names":["React","reactDom","store","login","logout","DashboardComponent","InvalidCredentialsComponent","LoginComponent","Component","state","msg","status","users","uname","createRef","pwd","authenticateUser","current","value","find","x","dispatch","setState","className","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport reactDom from 'react-dom';\nimport {store, login, logout} from './sessionStore'\nimport DashboardComponent from './DashboardComponent'\nimport InvalidCredentialsComponent from './InvalidCredentialsComponent'\n\nclass LoginComponent extends React.Component {\n    state = {msg: '',\n        status: '',\n        users: [\n            {'uname': 'admin', 'pwd': 'admin'},\n            {'uname': 'dristy', 'pwd': 'dristy'},\n            {'uname': 'user', 'pwd': 'password'},\n            {'uname': 'test', 'pwd': 'user'}\n        ]\n    }\n    uname = React.createRef()\n    pwd = React.createRef()\n    authenticateUser() {\n        var uname = this.uname.current.value\n        var pwd = this.pwd.current.value\n        if (this.state.users.find( x => x.uname === uname && x.pwd === pwd)) {\n            store.dispatch(login(uname))\n            this.setState({msg: 'Credentials Validated.....', status: 'valid', className: 'successClass'})\n            reactDom.render(<DashboardComponent />,document.getElementById(\"root\"));\n        }\n        else {\n            store.dispatch(logout())\n            this.setState({msg: 'Invalid Credentials.....', status: 'invalid', className: 'failureClass'})\n            reactDom.render(<InvalidCredentialsComponent />,document.getElementById(\"root\"));\n        }\n    }\n    render() {\n        return <div className = {this.state.className}>\n            <h1>User Login</h1>\n            User Name: <input type = \"text\" placeholder = \"User Name\" ref = {this.uname} /> <br/>\n            Password :  <input type = \"password\" placeholder = \"Password\" ref = {this.pwd} /> <br/>\n            <button onClick = {() => this.authenticateUser()}>Login</button> <br/>\n        </div>\n    }\n}\n\nexport default LoginComponent\n"]},"metadata":{},"sourceType":"module"}